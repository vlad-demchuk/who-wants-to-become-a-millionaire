{"version":3,"sources":["components/GameOver/GameOver.tsx","components/Gameplay/Gameplay.tsx","App.tsx","index.tsx"],"names":["GameOver","Gameplay","useState","questionId","setQuestionId","questions","question","setQuestion","selectedAnswer","setSeletcedAnswer","gameOver","setGameOver","openMenu","setOpenMenu","handleSelect","event","target","value","trueAnswer","setTimeout","current","useEffect","className","src","alt","onClick","role","title","answers","map","answer","htmlFor","type","name","id","checked","onChange","cn","totalWin","reverse","amout","win","App","startGame","setStartGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6qCAEaA,EAAqB,WAChC,OACE,6CCGSC,G,MAAqB,WAChC,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASG,EAAU,IAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CL,mBAAS,IAArD,mBAAOM,EAAP,KAAuBC,EAAvB,KAEA,EAAgCP,oBAAS,GAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KAEA,EAAgCT,oBAAS,GAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpBN,EAAkBM,EAAMC,OAAOC,OAC3BF,EAAMC,OAAOC,QAAUX,EAASY,WAClCC,YAAW,WACRR,GAAY,KACZ,MAEHP,GAAc,SAACgB,GACb,OAAOA,EAAU,KAEnBX,EAAkB,MAUtB,OANAY,qBAAU,WACRF,YAAW,WACTZ,EAAYF,EAAUF,MACrB,OACF,CAACA,IAGF,mCACIO,EA0DA,cAAC,EAAD,IAzDA,sBAAKY,UAAU,WAAf,UAEE,qBACEC,IAAI,WACJC,IAAI,OACJF,UAAU,wBACVG,QAAS,WACPZ,GAAY,IAEda,KAAK,iBAGP,oBAAIJ,UAAU,kBAAd,SAAiChB,EAASqB,QAE1C,qBAAKL,UAAU,oBAAf,SACGhB,EAASsB,QAAQC,KAAI,SAAAC,GAAM,OAC1B,wBAEEC,QAASD,EACTR,UAAU,kBAHZ,UAQE,mBAAGA,UAAU,mBAAb,SAAiCQ,IACjC,uBACEE,KAAK,QACLC,KAAK,SACLC,GAAIJ,EACJb,MAAOa,EACPK,QAAS3B,IAAmBsB,EAC5BM,SAAUtB,MAdPgB,QAoBX,sBAAKR,UAAWe,IAAG,sBAAuB,CAAE,8BAA+BzB,IAA3E,UAEE,qBACEU,UAAU,wBACVC,IAAI,kBACJC,IAAI,cACJC,QAAS,WACPZ,GAAY,IAEda,KAAK,iBAGP,oBAAIJ,UAAU,oBAAd,SACGgB,EAASC,UAAUV,KAAI,SAAAW,GAAK,OAC3B,oBAAmBlB,UAAU,qBAA7B,SAAmDkB,EAAMC,KAAhDD,EAAMN,mBCtFlBQ,EAAgB,WAC3B,MAAkCxC,oBAAS,GAA3C,mBAAOyC,EAAP,KAAkBC,EAAlB,KAEA,OACE,qBAAKtB,UAAU,MAAf,SACIqB,EAyBA,cAAC,EAAD,IAxBA,qBAAKrB,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVC,IAAI,eACJC,IAAI,eAGR,sBAAKF,UAAU,kBAAf,UACE,oBAAIA,UAAU,oBAAd,4CACA,wBACEA,UAAU,qBACVU,KAAK,SACLP,QAAS,WACPmB,GAAa,IAJjB,8BChBdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.44fd0812.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GameOver: React.FC = () => {\n  return (\n    <h1>\n      Game over!\n    </h1>\n  );\n};\n","import cn from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport questions from '../../api/questions.json';\nimport totalWin from '../../api/totalWin.json';\nimport { GameOver } from '../GameOver/GameOver';\nimport './Gameplay.scss';\n\nexport const Gameplay: React.FC = () => {\n  const [questionId, setQuestionId] = useState(0);\n  const [question, setQuestion] = useState(questions[0]);\n  const [selectedAnswer, setSeletcedAnswer] = useState('');\n\n  const [gameOver, setGameOver] = useState(false);\n\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSeletcedAnswer(event.target.value);\n    if (event.target.value !== question.trueAnswer) {\n      setTimeout(() => {\n        (setGameOver(true));\n      }, 2000);\n    } else {\n      setQuestionId((current) => {\n        return current + 1;\n      });\n      setSeletcedAnswer('');\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setQuestion(questions[questionId]);\n    }, 2000);\n  }, [questionId]);\n\n  return (\n    <>\n      {!gameOver ? (\n        <div className=\"gameplay\">\n\n          <img\n            src=\"menu.svg\"\n            alt=\"menu\"\n            className=\"gameplay__menu-opener\"\n            onClick={() => {\n              setOpenMenu(true);\n            }}\n            role=\"presentation\"\n          />\n\n          <h2 className=\"gameplay__title\">{question.title}</h2>\n\n          <div className=\"gameplay__buttons\">\n            {question.answers.map(answer => (\n              <label\n                key={answer}\n                htmlFor={answer}\n                className=\"gameplay__label\"\n              // style={{\n              //   backgroundImage: 'url(button.svg)',\n              // }}\n              >\n                <p className=\"gameplay__answer\">{answer}</p>\n                <input\n                  type=\"radio\"\n                  name=\"answer\"\n                  id={answer}\n                  value={answer}\n                  checked={selectedAnswer === answer}\n                  onChange={handleSelect}\n                />\n              </label>\n            ))}\n          </div>\n\n          <div className={cn('gameplay__total-win', { 'gameplay__total-win--active': openMenu })}>\n\n            <img\n              className=\"gameplay__menu-closer\"\n              src=\"menu-closer.svg\"\n              alt=\"menu-closer\"\n              onClick={() => {\n                setOpenMenu(false);\n              }}\n              role=\"presentation\"\n            />\n\n            <ul className=\"gameplay__winlist\">\n              {totalWin.reverse().map(amout => (\n                <li key={amout.id} className=\"gameplay__win-item\">{amout.win}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      ) : (\n        <GameOver />\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Gameplay } from './components/Gameplay/Gameplay';\n\nexport const App: React.FC = () => {\n  const [startGame, setStartGame] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {!startGame ? (\n        <div className=\"container\">\n          <div className=\"start-menu\">\n            <div className=\"start-menu__logo\">\n              <img\n                className=\"start-menu__img\"\n                src=\"main-img.svg\"\n                alt=\"main-img\"\n              />\n            </div>\n            <div className=\"title-container\">\n              <h1 className=\"start-menu__title\">Who wants to be a millionaire?</h1>\n              <button\n                className=\"start-menu__button\"\n                type=\"button\"\n                onClick={() => {\n                  setStartGame(true);\n                }}\n              >\n                Start\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Gameplay />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}