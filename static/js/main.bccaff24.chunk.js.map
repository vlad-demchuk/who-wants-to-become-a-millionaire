{"version":3,"sources":["components/GameOver/GameOver.tsx","components/Gameplay/Gameplay.tsx","App.tsx","index.tsx"],"names":["GameOver","Gameplay","useState","questionId","setQuestionId","questions","question","setQuestion","selectedAnswer","setSeletcedAnswer","selectDelay","setSelectDelay","totalWin","reverse","totalSum","gameOver","setGameOver","openMenu","setOpenMenu","handleSelect","event","target","value","trueAnswer","setTimeout","current","useEffect","console","log","className","src","alt","onClick","role","title","answers","map","answer","htmlFor","classNames","type","name","id","checked","onChange","amout","win","App","startGame","setStartGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wrCAEaA,EAAqB,WAChC,OACE,6CCGSC,G,MAAqB,WAChC,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASG,EAAU,IAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4CL,mBAAS,IAArD,mBAAOM,EAAP,KAAuBC,EAAvB,KACA,EAAsCP,oBAAS,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAAmBT,mBAAS,YAAIU,GAAUC,WAAnCC,EAAP,oBAEA,EAAgCZ,oBAAS,GAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KAEA,EAAgCd,oBAAS,GAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACpBX,EAAkBW,EAAMC,OAAOC,OAE3BF,EAAMC,OAAOC,QAAUhB,EAASiB,YAClCC,YAAW,WACRb,GAAe,KACf,KAEHa,YAAW,WACRR,GAAY,KACZ,OAEHQ,YAAW,WACRb,GAAe,KACf,KAEHP,GAAc,SAACqB,GACb,OAAOA,EAAU,OAiBvB,OAZAC,qBAAU,WACW,IAAfvB,IAEFwB,QAAQC,IAAI,KACZJ,YAAW,WACTjB,EAAYF,EAAUF,IACtBM,EAAkB,IAClBE,GAAe,KACd,QAEJ,CAACR,IAGF,mCACIY,EA+EA,cAAC,EAAD,IA9EA,sBAAKc,UAAU,WAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBACEC,IAAI,WACJC,IAAI,OACJF,UAAU,wBACVG,QAAS,WACPd,GAAY,IAEde,KAAK,iBAGP,sBAAKJ,UAAU,iBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCvB,EAAS4B,QAC1C,qBAAKL,UAAU,oBAAf,SACGvB,EAAS6B,QAAQC,KAAI,SAAAC,GAAM,OAC1B,wBAEEC,QAASD,EAETR,UAAWU,IACT,kBACA,CAAE,4BAA6B/B,IAAmB6B,GAClD,CAAE,2BAA4BA,IAAW/B,EAASiB,YAAcb,GAChE,CAAE,yBAA0BF,IAAmB6B,GAAUA,IAAW/B,EAASiB,YAAcb,IAR/F,UAYE,mBACEmB,UAAU,mBADZ,SAGGQ,IAEH,uBACEG,KAAK,QACLC,KAAK,SACLC,GAAIL,EACJf,MAAOe,EACPM,QAASnC,IAAmB6B,EAC5BO,SAAUzB,MAtBPkB,cA+Bf,sBAAKR,UAAWU,IAAW,sBAAuB,CAAE,8BAA+BtB,IAAnF,UAEE,qBACEY,UAAU,wBACVC,IAAI,kBACJC,IAAI,cACJC,QAAS,WACPd,GAAY,IAEde,KAAK,iBAGP,oBAAIJ,UAAU,oBAAd,SACGf,EAASsB,KAAI,SAAAS,GAAK,OACjB,oBAGEhB,UAAWU,IACT,qBACA,CAAE,2BAA4BjC,EAASoC,GAAKG,EAAMH,IAClD,CAAE,6BAA8BpC,EAASoC,KAAOG,EAAMH,KAN1D,SASGG,EAAMC,KARFD,EAAMH,mBClHhBK,EAAgB,WAC3B,MAAkC7C,oBAAS,GAA3C,mBAAO8C,EAAP,KAAkBC,EAAlB,KAEA,OACE,qBAAKpB,UAAU,MAAf,SACImB,EAyBA,cAAC,EAAD,IAxBA,qBAAKnB,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVC,IAAI,eACJC,IAAI,eAGR,sBAAKF,UAAU,kBAAf,UACE,oBAAIA,UAAU,oBAAd,4CACA,wBACEA,UAAU,qBACVW,KAAK,SACLR,QAAS,WACPiB,GAAa,IAJjB,8BChBdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bccaff24.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GameOver: React.FC = () => {\n  return (\n    <h1>\n      Game over!\n    </h1>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport questions from '../../api/questions.json';\nimport totalWin from '../../api/totalWin.json';\nimport { GameOver } from '../GameOver/GameOver';\nimport './Gameplay.scss';\n\nexport const Gameplay: React.FC = () => {\n  const [questionId, setQuestionId] = useState(0);\n  const [question, setQuestion] = useState(questions[0]);\n  const [selectedAnswer, setSeletcedAnswer] = useState('');\n  const [selectDelay, setSelectDelay] = useState(false);\n  const [totalSum] = useState([...totalWin].reverse());\n\n  const [gameOver, setGameOver] = useState(false);\n\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSeletcedAnswer(event.target.value);\n\n    if (event.target.value !== question.trueAnswer) {\n      setTimeout(() => {\n        (setSelectDelay(true));\n      }, 1000);\n\n      setTimeout(() => {\n        (setGameOver(true));\n      }, 3000);\n    } else {\n      setTimeout(() => {\n        (setSelectDelay(true));\n      }, 1000);\n\n      setQuestionId((current) => {\n        return current + 1;\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (questionId !== 0) {\n      // eslint-disable-next-line no-console\n      console.log(123);\n      setTimeout(() => {\n        setQuestion(questions[questionId]);\n        setSeletcedAnswer('');\n        setSelectDelay(false);\n      }, 3000);\n    }\n  }, [questionId]);\n\n  return (\n    <>\n      {!gameOver ? (\n        <div className=\"gameplay\">\n          <div className=\"desctop-container\">\n            <img\n              src=\"menu.svg\"\n              alt=\"menu\"\n              className=\"gameplay__menu-opener\"\n              onClick={() => {\n                setOpenMenu(true);\n              }}\n              role=\"presentation\"\n            />\n\n            <div className=\"gameplay__quiz\">\n              <h2 className=\"gameplay__title\">{question.title}</h2>\n              <div className=\"gameplay__buttons\">\n                {question.answers.map(answer => (\n                  <label\n                    key={answer}\n                    htmlFor={answer}\n                    // className=\"gameplay__label\"\n                    className={classNames(\n                      'gameplay__label',\n                      { 'gameplay__label--selected': selectedAnswer === answer },\n                      { 'gameplay__label--correct': answer === question.trueAnswer && selectDelay },\n                      { 'gameplay__label--wrong': selectedAnswer === answer && answer !== question.trueAnswer && selectDelay },\n                    )}\n\n                  >\n                    <p\n                      className=\"gameplay__answer\"\n                    >\n                      {answer}\n                    </p>\n                    <input\n                      type=\"radio\"\n                      name=\"answer\"\n                      id={answer}\n                      value={answer}\n                      checked={selectedAnswer === answer}\n                      onChange={handleSelect}\n                    />\n                  </label>\n                ))}\n              </div>\n            </div>\n\n          </div>\n\n          <div className={classNames('gameplay__total-win', { 'gameplay__total-win--active': openMenu })}>\n\n            <img\n              className=\"gameplay__menu-closer\"\n              src=\"menu-closer.svg\"\n              alt=\"menu-closer\"\n              onClick={() => {\n                setOpenMenu(false);\n              }}\n              role=\"presentation\"\n            />\n\n            <ul className=\"gameplay__winlist\">\n              {totalSum.map(amout => (\n                <li\n                  key={amout.id}\n                  // className=\"gameplay__win-item\"\n                  className={classNames(\n                    'gameplay__win-item',\n                    { 'gameplay__win-item--grey': question.id > amout.id },\n                    { 'gameplay__win-item--active': question.id === amout.id },\n                  )}\n                >\n                  {amout.win}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      ) : (\n        <GameOver />\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Gameplay } from './components/Gameplay/Gameplay';\n\nexport const App: React.FC = () => {\n  const [startGame, setStartGame] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {!startGame ? (\n        <div className=\"container\">\n          <div className=\"start-menu\">\n            <div className=\"start-menu__logo\">\n              <img\n                className=\"start-menu__img\"\n                src=\"main-img.svg\"\n                alt=\"main-img\"\n              />\n            </div>\n            <div className=\"title-container\">\n              <h1 className=\"start-menu__title\">Who wants to be a millionaire?</h1>\n              <button\n                className=\"start-menu__button\"\n                type=\"button\"\n                onClick={() => {\n                  setStartGame(true);\n                }}\n              >\n                Start\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Gameplay />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}